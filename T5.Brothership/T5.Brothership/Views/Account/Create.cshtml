@model T5.Brothership.ViewModels.CreateUserViewModel

@{
    ViewBag.Title = "Create Account";
}



<h2 class="text-center">Create Account</h2>

<div class="cform container jumbotron">
    @using (Html.BeginForm(new { @class = "contactForm" }))
    {

    @Html.AntiForgeryToken()
    <div>
        <h4 class="text-danger">@ViewBag.Message</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.NewUser.UserName, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NewUser.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group row">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NewUser.Email, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NewUser.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.User.ProfileImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.ProfileImagePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.ProfileImagePath, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group row">
            @Html.LabelFor(model => model.NewUser.DOB, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NewUser.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NewUser.NationalityID, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.NewUser.NationalityID, new SelectList(Model.Nationalities, "ID", "Description"),
                    new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NewUser.GenderId, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.NewUser.GenderId, new SelectList(Model.Genders, "ID", "Description"),
                    new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NewUser.Bio, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">

                @Html.EditorFor(model => model.NewUser.Bio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.Bio, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-lg btn-theme" />
            </div>
        </div>
    </div>
    }
</div>
<!--- Search -->

@{
    AjaxOptions options = new AjaxOptions
    {
        UpdateTargetId = "searchResult",
        InsertionMode = InsertionMode.Replace,
        LoadingElementId = "LoadingGif",
        HttpMethod = "Get"
    };
}
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

@using (Ajax.BeginForm("SearchIGDB", "Game", options))
{

    <div>
        @Html.TextBox("keyword", null, new { id = "Search" })
        <button type="submit" value="Search">Search</button>
    </div>
}

<div style="border:solid; height:14em; width:50%; overflow-y:scroll;">
    <div id="LoadingGif" style="display:none;">
        <img  style="margin-left:auto; display:block; margin-right:auto; margin-top:2em;" src="~/images/ajax-loader.gif" />
    </div>
    <ul style="list-style:none" id="searchResult">
        @Html.Action("SearchIGDB", "Game", new { keyword = "" })
    </ul>
</div>


<!--- End Search -->

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
