@model T5.Brothership.ViewModels.CreateUserViewModel
@using T5.Brothership.Entities.Models

@{
    ViewBag.Title = "Create Account";
}

<h2 class="text-center">Create Account</h2>

<div class="cform container jumbotron">
    @using (Html.BeginForm(new { @class = "contactForm" }))
    {

        @Html.AntiForgeryToken()
        <div>
            <h4 class="text-danger">@ViewBag.Message</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                @Html.LabelFor(model => model.CurrentUser.UserName, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.CurrentUser.UserName, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    @Html.ValidationMessageFor(model => model.CurrentUser.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CurrentUser.Email, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.CurrentUser.Email, new { htmlAttributes = new { @class = "form-control text-box single-line" } })
                    @Html.ValidationMessageFor(model => model.CurrentUser.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.User.ProfileImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.User.ProfileImagePath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.User.ProfileImagePath, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group row">
                @Html.LabelFor(model => model.CurrentUser.DOB, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.CurrentUser.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentUser.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CurrentUser.NationalityID, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.CurrentUser.NationalityID, new SelectList(Model.Nationalities, "ID", "Description"),
                                            new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CurrentUser.GenderId, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.CurrentUser.GenderId, new SelectList(Model.Genders, "ID", "Description"),
                                        new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentUser.GenderId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CurrentUser.Bio, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                <div class="col-md-6">

                    @Html.EditorFor(model => model.CurrentUser.Bio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentUser.Bio, "", new { @class = "text-danger" })
                </div>
            </div>

            @*@foreach (var socialMediaType in Enum.GetValues(typeof(SocialMediaType.SocialMediaTypes)))
                {
                    int socialMediaId = (int)socialMediaType;
                    <div class="form-group row">
                        <input type="hidden" name="CurrentUser.UserSocialJuncs.Index" value="@socialMediaId" />
                       <input name="CurrentUser.UserSocialJuncs[0].UserID" value="1" type="hidden" />
                        <input name="CurrentUser.UserSocialJuncs[@socialMediaId].SocialMediaTypeID" value="@socialMediaId" type="hidden" />

                        <label class="control-label col-md-2 col-md-offset-2" for="@(socialMediaType)input">@socialMediaType</label>
                        <div class="col-md-6">
                            <input id="@(socialMediaType)input" name="CurrentUser.UserSocialJuncs[@socialMediaId].URL" class="form-control" value="" />
                        </div>
                    </div>
            *@


            <div class="form-group row">
                <div id="userInputGames" class="col-md-6">
                    @for (int i = 0; i < Model.CurrentUser.Games.Count; i++)
                    {
                        <div>
                            <input type="hidden" name="CurrentUser.Games.Index" value="@Model.CurrentUser.Games.ToList()[i].igdbID" />
                            <input name="CurrentUser.Games[@Model.CurrentUser.Games.ToList()[i].igdbID].ID" value="@Model.CurrentUser.Games.ToList()[i].ID" type="hidden" />
                            <input name="CurrentUser.Games[@Model.CurrentUser.Games.ToList()[i].igdbID].igdbID" value="@Model.CurrentUser.Games.ToList()[i].igdbID" type="hidden" />
                            <input name="CurrentUser.Games[@Model.CurrentUser.Games.ToList()[i].igdbID].Title" value="@Model.CurrentUser.Games.ToList()[i].Title" type="hidden" />
                        </div>
                    }
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" style="visibility:hidden;" class="btn btn-lg btn-theme" id="SubmitButton" />
                </div>
            </div>


        </div>
    }
    @Html.Partial("UserGameEditSearch", Model.CurrentUser.Games.ToList())

    <input type="button" value="Create" class="btn btn-lg btn-theme bottom-margin center-button" onclick="SubmitForm();" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
