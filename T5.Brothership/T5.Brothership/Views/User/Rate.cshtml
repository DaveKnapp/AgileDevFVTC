@model T5.Brothership.ViewModels.UserRatingViewModel

@{
    ViewBag.Title = "Rate";
}

<div class="cform container jumbotron">
<h3>Rate <a href="@Url.Action("User","User")">@Model.UserRating.UserBeingRated.UserName</a></h3>

@using (Html.BeginForm(new { @class = "contactForm" }))
{
    @Html.AntiForgeryToken()

    <div>

        <hr />
        <h5 class="text-danger">@ViewBag.Message</h5>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.HiddenFor(model => model.UserRating.RaterUserID, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>

        <div class="form-group row">
            @Html.HiddenFor(model => model.UserRating.UserBeingRatedID, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.UserRating.Comment, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.UserRating.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserRating.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="container-fluid">
            <div class="stars">
                @foreach (var rating in Model.Ratings.OrderByDescending(p => p.ID))
                {
                    <input name="UserRating.RatingID" class="star star-@(rating.ID)" id="star-@(rating.ID)" type="radio" value="@(rating.ID)">
                    <label class="star star-@(rating.ID)" for="star-@(rating.ID)"> </label>
                    @*@Html.RadioButtonFor(model => model.UserRating.RatingID, rating.ID, new { @class ="" })
                    @Html.LabelFor(model => model.UserRating.RatingID, new { @class = "" })*@
                    // With the following two lines You can change the rating, but you get an error because of the data type I think
                    //<input type="radio" id="star@() " name="rating" value="@rating.ID" />
                    //<label for="star@(rating.ID) ">@rating.ID stars</label>
                }
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Rate" class="btn btn-lg btn-theme top-margin" />
        </div>
    </div>
}
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
